julia> @testset "Statistical Correctness" begin
           include("statistical_validation/backend_consistency.jl")
           include("statistical_validation/statistical_validation.jl")
           include("statistical_validation/incompatible_formula_se_validation.jl")
       end
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Warning: Skipping categorical variable float_wage due to processing error: ArgumentError("Could not find categorical variable float_wage in model formula terms. Ensure the variable is categorical and present in the model.")
└ @ Margins ~/.julia/dev/Margins/src/population/categorical_effects.jl:151
┌ Info: Two-way interaction (Control level)
│   analytical_se = 0.019191938757811652
│   computed_se = 0.019191938757811652
└   relative_error = 0.0
┌ Info: Two-way interaction (Treatment level)
│   analytical_se = 0.017657961696003824
│   computed_se = 0.017657961696003824
└   relative_error = 0.0
┌ Info: GLM interaction (Control level)
│   analytical_se = 0.029420807340945886
│   computed_se = 0.029420807340945886
└   relative_error = 0.0
┌ Info: Three-way interaction (Control level)
│   analytical_se = 0.03572739691411988
│   computed_se = 0.03572739691411988
└   relative_error = 0.0
┌ Info: Contributing coefficients
│   contributing_terms =
│    4-element Vector{Tuple{String, Float64}}:
│     ("x", 1.0)
│     ("x & y", 2.0)
│     ("x & group: Treatment", 0.0)
└     ("x & y & group: Treatment", 0.0)
┌ Info: Three-way interaction (Treatment level)
│   analytical_se = 0.041950675437426296
│   computed_se = 0.041950675437426296
└   relative_error = 0.0
┌ Info: Contributing coefficients
│   contributing_terms =
│    4-element Vector{Tuple{String, Float64}}:
│     ("x", 1.0)
│     ("x & y", 2.0)
│     ("x & group: Treatment", 1.0)
└     ("x & y & group: Treatment", 2.0)
┌ Info: Three-way interaction (y=-1.0, Treatment)
│   analytical_se = 0.023077964192648813
│   computed_se = 0.023077964192648813
└   relative_error = 0.0
┌ Info: Mixed model (random intercept)
│   analytical_se = 0.015003630415821841
│   computed_se = 0.015003630415821851
└   relative_error = 6.937214905590377e-16
┌ Info: Random slope (fixed effects approach)
│   analytical_se = 0.03418879930246711
│   computed_se = 0.03418879930246701
└   relative_error = 3.044371568529978e-15
┌ Info: Mixed interaction (Control level)
│   analytical_se = 0.021655807518806656
│   computed_se = 0.021655807518806656
└   relative_error = 0.0
┌ Info: Mixed interaction (Treatment level)
│   analytical_se = 0.02416288220619948
│   computed_se = 0.02416288220619948
└   relative_error = 0.0
┌ Info: LHS log transformation
│   analytical_se = 0.008268055141649704
│   computed_se = 0.00826805514164971
└   relative_error = 6.294310256489226e-16
┌ Info: RHS log function backend consistency
│   ad_se = 0.024384928204518364
│   fd_se = 0.024384928235856924
└   relative_difference = 1.2851610616297974e-9
┌ Info: Exponential function backend consistency
│   ad_se = 0.010370572493933786
└   fd_se = 0.010370572493949352
┌ Info: Trigonometric function backend consistency
│   ad_se = 0.022727216738993243
└   fd_se = 0.022727216739050007
┌ Info: Power terms backend consistency
│   ad_se = 0.017902593288661735
└   fd_se = 0.01790259328868164
┌ Info: Specialized SE validation coverage
│   compatible_formulas = 11
└   specialized_formulas = 8
┌ Info: Validation methods
│   interactions = "Hand-coded analytical"
│   mixed_models = "Fixed effects vcov"
└   functions = "Backend consistency"
Test Summary:           | Pass  Total     Time
Statistical Correctness |  755    755  1m41.1s
Test.DefaultTestSet("Statistical Correctness", Any[Test.DefaultTestSet("Backend Consistency Tests - AD vs FD Validation", Any[Test.DefaultTestSet("AD vs FD Computational Consistency", Any[Test.DefaultTestSet("Simple LM - Full 2×2 Backend Consistency", Any[], 12, false, false, true, 1.759769172096769e9, 1.759769174240139e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Multiple LM - Full 2×2 Backend Consistency", Any[], 12, false, false, true, 1.759769174242358e9, 1.759769175671826e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Quadratic LM - Full 2×2 Backend Consistency", Any[], 12, false, false, true, 1.759769175671854e9, 1.75976917700687e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Simple Logistic - Full 2×2 Backend Consistency", Any[], 12, false, false, true, 1.759769177010768e9, 1.759769178162157e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Multiple Logistic - Full 2×2 Backend Consistency", Any[], 12, false, false, true, 1.759769178162184e9, 1.759769178971843e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl")], 0, false, false, true, 1.759769170639328e9, 1.75976917897185e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Individual Quadrant Backend Consistency", Any[Test.DefaultTestSet("Population Effects - AD vs FD", Any[], 4, false, false, true, 1.759769179034847e9, 1.759769179684236e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Population Predictions - AD vs FD", Any[], 4, false, false, true, 1.759769179684263e9, 1.759769179746126e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Profile Effects - AD vs FD", Any[], 4, false, false, true, 1.759769179746145e9, 1.759769179968053e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Profile Predictions - AD vs FD", Any[], 4, false, false, true, 1.759769179968075e9, 1.759769180056336e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl")], 0, false, false, true, 1.759769178971866e9, 1.75976918005634e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("GLM Chain Rule Consistency - AD vs FD", Any[Test.DefaultTestSet("Logistic Model - Both Target Scales", Any[], 4, false, false, true, 1.759769180158003e9, 1.759769180563468e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl")], 0, false, false, true, 1.759769180056355e9, 1.759769180563472e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Performance Characteristics - FD Zero Allocation", Any[Test.DefaultTestSet("Scaling Consistency", Any[], 12, false, false, true, 1.75976918063374e9, 1.759769180635011e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl")], 1, false, false, true, 1.759769180563492e9, 1.759769180635014e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Backend Consistency Edge Cases", Any[Test.DefaultTestSet("Small Sample Consistency", Any[], 1, false, false, true, 1.759769180635029e9, 1.759769181131055e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Extreme Coefficient Consistency", Any[], 1, false, false, true, 1.759769181131073e9, 1.759769181977934e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl")], 0, false, false, true, 1.759769180635022e9, 1.759769181977939e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl")], 0, false, false, true, 1.759769170639304e9, 1.759769181977941e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/backend_consistency.jl"), Test.DefaultTestSet("Comprehensive Statistical Validation - 2×2 Framework Coverage", Any[Test.DefaultTestSet("Tier 1: Direct Coefficient Cases - All 2×2 Quadrants", Any[Test.DefaultTestSet("Simple Linear Model: y ~ x", Any[], 8, false, false, true, 1.759769182120018e9, 1.759769182387376e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Multiple Regression: y ~ x + z", Any[], 10, false, false, true, 1.759769182387394e9, 1.759769182442874e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl")], 0, false, false, true, 1.759769182120011e9, 1.759769182442878e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Tier 1A: Analytical SE Validation - Linear Models", Any[Test.DefaultTestSet("Simple Linear: y ~ x - SE Verification", Any[], 4, false, false, true, 1.759769182442905e9, 1.75976918246328e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Multiple Linear: y ~ x + z - SE Verification", Any[], 6, false, false, true, 1.759769182463302e9, 1.759769182599239e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl")], 0, false, false, true, 1.759769182442894e9, 1.759769182599242e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Tier 1B: Analytical SE Validation - GLM Chain Rules", Any[Test.DefaultTestSet("Logistic Regression: SE Chain Rule Verification", Any[], 5, false, false, true, 1.759769182599268e9, 1.759769182866016e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Poisson Regression: SE Chain Rule Verification", Any[], 5, false, false, true, 1.759769182866036e9, 1.759769183364804e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl")], 0, false, false, true, 1.759769182599258e9, 1.759769183364808e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Tier 2: Function Transformations - 2×2 Coverage", Any[Test.DefaultTestSet("Log Transformation: y ~ log(x)", Any[], 8, false, false, true, 1.759769183364837e9, 1.759769184690341e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Quadratic: y ~ x + x²", Any[], 8, false, false, true, 1.759769184690362e9, 1.759769186074314e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl")], 0, false, false, true, 1.759769183364827e9, 1.759769186074319e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Tier 3: GLM Chain Rules - 2×2 Coverage", Any[Test.DefaultTestSet("Logistic Regression: y ~ x + z", Any[], 10, false, false, true, 1.759769186074347e9, 1.759769186332642e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Poisson Regression: y ~ x + z", Any[], 10, false, false, true, 1.759769186332661e9, 1.759769187039726e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl")], 0, false, false, true, 1.759769186074337e9, 1.759769187039731e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Tier 4: Systematic Model Coverage - FormulaCompiler Style", Any[Test.DefaultTestSet("LM: Simple continuous - 2×2 Framework", Any[], 14, false, false, true, 1.759769188012624e9, 1.759769189983418e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("LM: Simple categorical - 2×2 Framework", Any[], 8, false, false, true, 1.759769189985477e9, 1.759769190586679e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("LM: Multiple continuous - 2×2 Framework", Any[], 14, false, false, true, 1.759769190588516e9, 1.759769191950249e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("LM: Multiple categorical - 2×2 Framework", Any[], 8, false, false, true, 1.759769191950279e9, 1.759769192596493e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("LM: Mixed types - 2×2 Framework", Any[], 14, false, false, true, 1.759769192596521e9, 1.759769194000768e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("LM: Simple interaction - 2×2 Framework", Any[], 14, false, false, true, 1.759769194002786e9, 1.759769195297538e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("LM: Interaction w/o main - 2×2 Framework", Any[], 14, false, false, true, 1.759769195299505e9, 1.75976919676123e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("LM: Function transform - 2×2 Framework", Any[], 8, false, false, true, 1.759769196763416e9, 1.75976919726026e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("LM: Function in interaction - 2×2 Framework", Any[], 14, false, false, true, 1.759769197262364e9, 1.759769199163417e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("LM: Three-way interaction - 2×2 Framework", Any[], 14, false, false, true, 1.759769199166177e9, 1.759769201597738e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl")  …  Test.DefaultTestSet("GLM: Logistic simple - 2×2 Framework", Any[], 14, false, false, true, 1.759769211089465e9, 1.759769212316931e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("GLM: Logistic mixed - 2×2 Framework", Any[], 14, false, false, true, 1.759769212319544e9, 1.759769213178664e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("GLM: Logistic interaction - 2×2 Framework", Any[], 14, false, false, true, 1.759769213181464e9, 1.759769213993206e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("GLM: Logistic function - 2×2 Framework", Any[], 8, false, false, true, 1.759769213996519e9, 1.759769214694498e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("GLM: Logistic complex - 2×2 Framework", Any[], 14, false, false, true, 1.75976921469776e9, 1.759769216464032e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("GLM: Poisson simple - 2×2 Framework", Any[], 14, false, false, true, 1.759769216466853e9, 1.759769217651748e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("GLM: Poisson mixed - 2×2 Framework", Any[], 14, false, false, true, 1.759769217654402e9, 1.759769218447802e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("GLM: Poisson interaction - 2×2 Framework", Any[], 14, false, false, true, 1.759769218450829e9, 1.759769219273016e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("GLM: Gamma mixed - 2×2 Framework", Any[], 14, false, false, true, 1.759769219275642e9, 1.759769221240206e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("GLM: Gaussian LogLink - 2×2 Framework", Any[], 14, false, false, true, 1.759769221242816e9, 1.759769221952163e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl")], 0, false, false, true, 1.759769187039749e9, 1.759769221952169e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Tier 5: Edge Cases and Statistical Robustness", Any[Test.DefaultTestSet("Small Sample Robustness", Any[], 6, false, false, true, 1.7597692219522e9, 1.759769221954674e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Boundary Conditions", Any[], 2, false, false, true, 1.759769221954684e9, 1.759769221955424e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl")], 0, false, false, true, 1.75976922195219e9, 1.759769221955426e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Tier 6: Integer Variable Systematic Coverage - CRITICAL", Any[Test.DefaultTestSet("Simple Integer Variables - All 2×2 Quadrants", Any[Test.DefaultTestSet("int_age - 2×2 Framework", Any[], 8, false, false, true, 1.759769221955546e9, 1.759769223324355e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("int_education - 2×2 Framework", Any[], 8, false, false, true, 1.75976922332438e9, 1.759769223410612e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("int_experience - 2×2 Framework", Any[], 8, false, false, true, 1.759769223410636e9, 1.759769224738006e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl")], 0, false, false, true, 1.759769221955535e9, 1.759769224738014e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Integer Interactions - 2×2 Framework", Any[], 2, false, false, true, 1.759769224738033e9, 1.759769226550852e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Multiple Integer Variables - 2×2 Framework", Any[], 6, false, false, true, 1.759769226550874e9, 1.75976922835545e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Integer Polynomial Transformations - 2×2 Framework", Any[], 6, false, false, true, 1.759769228355472e9, 1.759769230779148e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Mixed Integer/Float Interactions - 2×2 Framework", Any[], 3, false, false, true, 1.759769230779172e9, 1.759769232584001e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("GLM with Integer Variables - 2×2 Framework", Any[], 6, false, false, true, 1.759769232584042e9, 1.759769234321091e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl")], 0, false, false, true, 1.759769221955432e9, 1.759769234321095e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Tier 7: Bootstrap SE Validation - Empirical Verification", Any[Test.DefaultTestSet("Systematic Bootstrap SE Validation", Any[Test.DefaultTestSet("Bootstrap Validation Framework Tests", Any[Test.DefaultTestSet("Bootstrap Utilities", Any[], 3, false, false, true, 1.759769234482653e9, 1.759769234496635e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/bootstrap_validation_tests.jl"), Test.DefaultTestSet("SE Agreement Validation", Any[], 3, false, false, true, 1.759769234496659e9, 1.75976923453974e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/bootstrap_validation_tests.jl")], 0, false, false, true, 1.759769234482646e9, 1.759769234539745e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/bootstrap_validation_tests.jl"), Test.DefaultTestSet("Multi-Model Bootstrap Validation", Any[Test.DefaultTestSet("Linear Model Bootstrap Validation", Any[], 2, false, false, true, 1.759769241502596e9, 1.759769241579532e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/bootstrap_validation_tests.jl"), Test.DefaultTestSet("GLM Bootstrap Validation", Any[], 2, false, false, true, 1.759769241579557e9, 1.759769241643244e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/bootstrap_validation_tests.jl")], 44, false, false, true, 1.759769234539774e9, 1.759769241643249e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/bootstrap_validation_tests.jl"), Test.DefaultTestSet("Categorical Effects Bootstrap Validation", Any[], 16, false, false, true, 1.759769241643273e9, 1.759769246550788e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/bootstrap_validation_tests.jl"), Test.DefaultTestSet("Quick Bootstrap Validation Check", Any[], 1, false, false, true, 1.759769246550815e9, 1.759769246793856e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/bootstrap_validation_tests.jl"), Test.DefaultTestSet("Bootstrap Validation Edge Cases", Any[], 3, false, false, true, 1.759769246793882e9, 1.759769247027046e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/bootstrap_validation_tests.jl")], 0, false, false, true, 1.759769234482623e9, 1.759769247027051e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/bootstrap_validation_tests.jl")], 0, false, false, true, 1.759769234321114e9, 1.759769247027056e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Tier 8: Robust SE Integration - Econometric Functionality", Any[Test.DefaultTestSet("Robust Standard Errors Integration", Any[Test.DefaultTestSet("Robust SE Framework Tests", Any[Test.DefaultTestSet("Heteroskedastic Data Generation", Any[], 15, false, false, true, 1.759769247939146e9, 1.759769247952492e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl"), Test.DefaultTestSet("Basic Robust SE Integration", Any[], 5, false, false, true, 1.759769247952514e9, 1.759769247954714e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl")], 0, false, false, true, 1.75976924793914e9, 1.759769247954715e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl"), Test.DefaultTestSet("Comprehensive Sandwich Estimator Testing", Any[Test.DefaultTestSet("Linear Model Sandwich Estimators", Any[], 2, false, false, true, 1.759769247954725e9, 1.759769247962628e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl"), Test.DefaultTestSet("GLM Sandwich Estimators", Any[], 1, false, false, true, 1.75976924796264e9, 1.759769247966827e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl")], 0, false, false, true, 1.759769247954721e9, 1.759769247966828e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl"), Test.DefaultTestSet("Clustered Standard Errors Testing", Any[Test.DefaultTestSet("Linear Model Clustered SEs", Any[], 7, false, false, true, 1.759769247966838e9, 1.759769248874455e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl"), Test.DefaultTestSet("Variable Cluster Sizes", Any[], 2, false, false, true, 1.759769248874468e9, 1.759769249813625e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl")], 0, false, false, true, 1.759769247966834e9, 1.759769249813633e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl"), Test.DefaultTestSet("Comprehensive Robust SE Test Suite", Any[Test.DefaultTestSet("Linear Model with Heteroskedasticity", Any[], 8, false, false, true, 1.759769249813656e9, 1.75976924981771e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_validation.jl"), Test.DefaultTestSet("GLM Logistic with Robust SEs", Any[], 1, false, false, true, 1.759769249817716e9, 1.759769249823055e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_validation.jl"), Test.DefaultTestSet("Clustered Standard Errors", Any[], 5, false, false, true, 1.759769249823063e9, 1.759769249825327e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_validation.jl")], 13, false, false, true, 1.759769249813645e9, 1.759769249847546e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl"), Test.DefaultTestSet("Robust SE Edge Cases and Error Handling", Any[Test.DefaultTestSet("Small Sample Robustness", Any[], 2, false, false, true, 1.759769249847589e9, 1.759769250125829e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl"), Test.DefaultTestSet("Invalid Cluster Variable Handling", Any[], 1, false, false, true, 1.759769250125848e9, 1.759769250126589e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl")], 0, false, false, true, 1.759769249847577e9, 1.759769250126589e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl")], 0, false, false, true, 1.759769247939124e9, 1.759769250126589e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/robust_se_tests.jl")], 0, false, false, true, 1.759769247027081e9, 1.759769250126609e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Tier 9: Specialized SE Cases - Advanced Edge Cases", Any[Test.DefaultTestSet("Tier 5: Specialized SE Cases - Phase 4 Implementation", Any[Test.DefaultTestSet("Integer Variable SE Testing - Float Conversion Validation", Any[Test.DefaultTestSet("Integer vs Float SE Consistency", Any[], 6, false, false, true, 1.759769250246032e9, 1.759769252733019e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("Integer Variable GLM SE Validation", Any[], 6, false, false, true, 1.75976925273304e9, 1.75976925366602e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("Integer Variable Profile SE Edge Cases", Any[], 6, false, false, true, 1.759769253666047e9, 1.759769254577597e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl")], 0, false, false, true, 1.759769250246025e9, 1.759769254577601e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("Elasticity SE Testing - Delta Method Validation", Any[Test.DefaultTestSet("Elasticity SE Mathematical Properties", Any[], 9, false, false, true, 1.75976925457763e9, 1.759769254610746e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("Semi-elasticity SE Testing", Any[], 7, false, false, true, 1.759769254610764e9, 1.759769254611119e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("Elasticity SE vs Regular Effect SE Comparison", Any[], 5, false, false, true, 1.759769254611126e9, 1.759769254632215e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("GLM Elasticity SE Validation", Any[], 5, false, false, true, 1.759769254632232e9, 1.75976925533717e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl")], 0, false, false, true, 1.759769254577618e9, 1.759769255337174e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("Categorical Mixture SE Testing - Weighted Scenario SEs", Any[Test.DefaultTestSet("Basic Categorical Mixture SE Validation", Any[], 7, false, false, true, 1.759769255337212e9, 1.759769256892509e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("Boolean Mixture SE Testing", Any[], 6, false, false, true, 1.759769256892534e9, 1.759769258429676e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("Complex Mixture SE Testing", Any[], 7, false, false, true, 1.759769258429701e9, 1.75976925995211e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("GLM Categorical Mixture SE Testing", Any[], 8, false, false, true, 1.759769259952129e9, 1.759769261572322e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl")], 0, false, false, true, 1.7597692553372e9, 1.759769261572326e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("Error Propagation Testing - Edge Cases and Boundary Conditions", Any[Test.DefaultTestSet("Near-Singular Matrix Error Propagation", Any[], 3, false, false, true, 1.759769261572357e9, 1.759769262381959e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl"), Test.DefaultTestSet("Extreme Value SE Robustness", Any[], 6, false, false, true, 1.759769262381996e9, 1.759769262393675e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl")], 0, false, false, true, 1.759769261572347e9, 1.759769262393679e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl")], 0, false, false, true, 1.759769250246001e9, 1.759769262393682e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/specialized_se_tests.jl")], 0, false, false, true, 1.759769250126625e9, 1.759769262393686e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl")], 0, false, false, true, 1.759769182119985e9, 1.759769262393689e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/statistical_validation.jl"), Test.DefaultTestSet("Incompatible Formula SE Validation", Any[Test.DefaultTestSet("Interaction Models SE Validation", Any[Test.DefaultTestSet("Two-way Linear Interaction: y ~ x * group", Any[Test.DefaultTestSet("Main Effect of x at Control Level", Any[], 1, false, false, true, 1.759769262733868e9, 1.759769263961597e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Main Effect of x at Treatment Level", Any[], 1, false, false, true, 1.759769263961624e9, 1.759769263966395e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769262626453e9, 1.759769263966398e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Two-way GLM Interaction: logistic ~ x * group", Any[Test.DefaultTestSet("GLM Interaction Main Effect - Control Level", Any[], 1, false, false, true, 1.759769264089362e9, 1.759769264719279e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769263966409e9, 1.759769264719284e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Three-way Interaction: y ~ x * y * group", Any[Test.DefaultTestSet("Three-way Interaction - Control Level", Any[], 1, false, false, true, 1.759769265103109e9, 1.759769266636518e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Three-way Interaction - Treatment Level", Any[], 1, false, false, true, 1.759769266636547e9, 1.759769266649821e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Three-way Interaction - Different Y Value", Any[], 1, false, false, true, 1.759769266649848e9, 1.75976926665067e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769264719307e9, 1.759769266650674e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769262626447e9, 1.759769266650677e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Mixed Models SE Validation", Any[Test.DefaultTestSet("Random Intercept: y ~ x + (1|subject)", Any[Test.DefaultTestSet("Fixed Effect SE for x", Any[], 1, false, false, true, 1.759769267060165e9, 1.759769267642928e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769266650698e9, 1.759769267642933e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Random Slope: y ~ x + (x|subject)", Any[Test.DefaultTestSet("Random Slope - Fixed Effect SE for x", Any[], 1, false, false, true, 1.759769267825587e9, 1.75976926782615e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769267642952e9, 1.759769267826154e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Mixed with Interaction: y ~ x * group + (1|subject)", Any[Test.DefaultTestSet("Mixed Interaction - Main Effect at Control Level", Any[], 1, false, false, true, 1.759769268394648e9, 1.759769268939373e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Mixed Interaction - Main Effect at Treatment Level", Any[], 1, false, false, true, 1.759769268939392e9, 1.759769268945281e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769267826165e9, 1.759769268945285e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769266650689e9, 1.759769268945288e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Complex Function SE Validation", Any[Test.DefaultTestSet("LHS Log Transformation: log(y) ~ x + z", Any[Test.DefaultTestSet("LHS Log - Should Work with Standard Analytical SE", Any[], 1, false, false, true, 1.759769269015759e9, 1.759769269047216e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769268945315e9, 1.759769269047228e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("RHS Log Function: y ~ log(x) + z", Any[Test.DefaultTestSet("RHS Log - Backend Consistency Validation", Any[], 1, false, false, true, 1.759769269219903e9, 1.75976926973961e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769269047256e9, 1.759769269739617e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Exponential Functions: y ~ exp(x/10) + z", Any[Test.DefaultTestSet("Exponential - Backend Consistency", Any[], 1, false, false, true, 1.759769270048009e9, 1.759769270597233e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769269739643e9, 1.759769270597239e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Trigonometric Functions: y ~ sin_x_term + z", Any[Test.DefaultTestSet("Trigonometric - Backend Consistency", Any[], 1, false, false, true, 1.759769270757715e9, 1.759769271493473e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769270597263e9, 1.759769271493478e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Power Terms: y ~ x + x^2", Any[Test.DefaultTestSet("Power Terms - Analytical SE for Linear Term", Any[], 1, false, false, true, 1.759769271543132e9, 1.759769271640103e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769271493499e9, 1.759769271640109e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769268945303e9, 1.759769271640113e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl"), Test.DefaultTestSet("Incompatible Formula Coverage Summary", Any[Test.DefaultTestSet("Coverage Analysis", Any[], 1, false, false, true, 1.759769271640145e9, 1.759769271687732e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769271640132e9, 1.759769271687738e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.75976926262643e9, 1.759769271687741e9, false, "/Users/emf/.julia/dev/Margins/test/statistical_validation/incompatible_formula_se_validation.jl")], 0, false, false, true, 1.759769170567921e9, 1.759769271687745e9, false, "/Users/emf/.julia/dev/Margins/test/runtests.jl")
